{"ast":null,"code":"var _jsxFileName = \"/Users/vaceslav/Documents/Trading_Bot/frontend/src/components/TradingChart.tsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Register Chart.js components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nexport const TradingChart = ({\n  data,\n  options\n}) => {\n  const defaultOptions = {\n    responsive: true,\n    maintainAspectRatio: true,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        type: 'linear',\n        position: 'right',\n        title: {\n          display: true,\n          text: 'Price'\n        },\n        grid: {\n          drawOnChartArea: false\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          usePointStyle: true,\n          padding: 20\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD'\n              }).format(context.parsed.y);\n            }\n            return label;\n          }\n        }\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    },\n    elements: {\n      line: {\n        tension: 0.4\n      },\n      point: {\n        radius: 3,\n        hoverRadius: 5\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trading-chart\",\n    \"data-testid\": \"trading-chart\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options || defaultOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_c = TradingChart;\nvar _c;\n$RefreshReg$(_c, \"TradingChart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","jsxDEV","_jsxDEV","register","TradingChart","data","options","defaultOptions","responsive","maintainAspectRatio","scales","x","type","time","unit","displayFormats","day","title","display","text","y","position","grid","drawOnChartArea","plugins","legend","labels","usePointStyle","padding","tooltip","mode","intersect","callbacks","label","context","dataset","parsed","Intl","NumberFormat","style","currency","format","interaction","axis","elements","line","tension","point","radius","hoverRadius","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vaceslav/Documents/Trading_Bot/frontend/src/components/TradingChart.tsx"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { \n  Chart as ChartJS, \n  CategoryScale, \n  LinearScale, \n  PointElement, \n  LineElement, \n  Title, \n  Tooltip, \n  Legend,\n  TimeScale\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { ChartData, ChartOptions } from 'chart.js';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\ninterface TradingChartProps {\n  data: ChartData;\n  options?: ChartOptions;\n}\n\nexport const TradingChart: React.FC<TradingChartProps> = ({ data, options }) => {\n  const defaultOptions: ChartOptions = {\n    responsive: true,\n    maintainAspectRatio: true,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        type: 'linear',\n        position: 'right',\n        title: {\n          display: true,\n          text: 'Price'\n        },\n        grid: {\n          drawOnChartArea: false\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          usePointStyle: true,\n          padding: 20\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function(context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += new Intl.NumberFormat('en-US', { \n                style: 'currency', \n                currency: 'USD' \n              }).format(context.parsed.y);\n            }\n            return label;\n          }\n        }\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    },\n    elements: {\n      line: {\n        tension: 0.4\n      },\n      point: {\n        radius: 3,\n        hoverRadius: 5\n      }\n    }\n  };\n  \n  return (\n    <div className=\"trading-chart\" data-testid=\"trading-chart\">\n      <Line data={data} options={options || defaultOptions} />\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}